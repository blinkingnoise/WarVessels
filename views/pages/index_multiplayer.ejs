<!DOCTYPE html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>War Vessels</title>
    <meta name='author' content="Manas Sarpatwar">
    <meta name="description" content="War vessels game in browser">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" type="text/css" href="../public/css/main_multiplayer.css" />
    <link rel="stylesheet" type="text/css" href="../public/css/balloon.css" />
    <script language="javascript" type="text/javascript" src="../public/js/sketch.js"></script>
    <script language="javascript" type="text/javascript" src="../public/js/WarVessels.js"></script>
    <script language="javascript" type="text/javascript" src="../public/js/Piece.js"></script>
    <script language="javascript" type="text/javascript" src="../public/js/Player.js"></script>
    <script language="javascript" type="text/javascript" src="../public/js/helpers.js"></script>
    <script language="javascript" type="text/javascript" src="../public/js/WaterWave.js"></script>

</head>

<body>
    <main>
        <button id="help" onclick="tutorial()" class="button">?</button>
        <button id="sound" onclick = 'toggleSound()' class="button"><div class = 'on' id = 'soundImg'></div></button>
        <div id="game">
            <div id="help-info">
                <section>
                    <p>Rules <button id="close" onclick="tutorial()" class="button">&times;</button></p>
                    <ol>
                        <li>War Vessels is played by 2 players</li>
                        <li>It is a game of guessing where the opponent has placed their ships</li>
                        <li><img alt='hit' src='../public/img/hit.png' class='help-icons'> is a hit and <img alt='miss'
                                src='../public/img/miss.png' class='help-icons'> is a miss</li>
                        <li>Ships sink when they cannot survive another attack</li>
                        <li>Game is over when either all your ships or your opponent's ships have sunk</li>
                    </ol>
                    <p>Instructions</p>
                    <ol>
                        <li>Drag ships to place them</li>
                        <li><span class='touch'></span> on ships to rotate them</li>
                        <li><span class='touch'></span> on the opponent's board to attack</li>
                    </ol>
                </section>
            </div>
            <div id="info">
                <button id="readyBtn" onclick="playerReady()" class="button noDisplay">Ready</button>
                <p id="turn"></p>
                <button id="playAgainBtn" onclick="playAgain()" class="button noDisplay">Play again?</button>
            </div>
            <div id="board">
                <div id="player">
                    <div id="patrol" draggable="false" class="interactable piece loadingImg">
                    </div>
                    <div id="submarine" draggable="false" class="interactable piece loadingImg">
                    </div>
                    <div id="destroyer" draggable="false" class="interactable piece loadingImg">
                    </div>
                    <div id="battleship" draggable="false" class="interactable piece loadingImg">
                    </div>
                    <div id="carrier" draggable="false" class="interactable piece loadingImg">
                    </div>
                    <canvas id="playerCanvas"></canvas>
                </div>
                <div id="opponent">
                    <canvas id="opponentCanvas"></canvas>
                </div>
            </div>

        </div>
    </main>
</body>
<script src="/socket.io/socket.io.js"></script>
<script>
    var gameID = "<%= game %>";
    var playerID = "<%= playerID %>";
    var data = <%- JSON.stringify(data) %>;
    var tutorialOpen = false;

    var socket = io();
    socket.on('disconnect', () => {window.location.reload()});
    socket.on('reconnect', () => {window.location.reload()});
    var btns = document.getElementsByTagName('button');
    for (let btn of btns) {
        btn.addEventListener('touchstart', () => { btn.click() });
    }

    if (!localStorage.getItem('tutorialDone')) {
        setTimeout(() => {
            tutorial();
            localStorage.setItem('tutorialDone', true);
        }, 500);
    }

    function is_touch_device() {
        return 'ontouchstart' in window;
    }

    let touchElements = document.getElementsByClassName('touch');
    for (let t of touchElements) {
        html(t, (is_touch_device() ? 'Tap' : 'Click'));
    }

    function tutorial() {
        tutorialOpen = !tutorialOpen;
        select('#help-info').classList.toggle('show');
        select('body').classList.toggle('has-overlay');
    }
</script>

</html>