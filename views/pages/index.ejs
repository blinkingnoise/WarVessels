<!DOCTYPE html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>War Vessels</title>
    <meta name='author' content="Manas Sarpatwar">
    <meta name="description" content="War vessels in browser">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" type="text/css" href="public/css/main.css" />
    <link rel="stylesheet" type="text/css" href="public/css/balloon.css" />
    <script language="javascript" type="text/javascript" src="../public/js/helpers.js"></script>
</head>

<body>
    <a href="https://github.com/manassarpatwar/WarVessels" aria-label="View source on GitHub">
        <svg width="80" height="80" viewBox="0 0 250 250" style="fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;"
            aria-hidden="true">
            <path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"></path>
            <path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2"
                fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"></path>
            <path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z"
                fill="currentColor" class="octo-body"></path>
        </svg>
    </a>
    <div id="center">
        <div id="title" class = "">
            <div class='title-word'>
                <div id='war'>WAR</div>
                <div id='vessels'>&nbsp;&nbsp;&nbsp;&nbsp;VESSELS</div>
            </div>
            <button onclick="init()" class="button" id="multiplayer">
                <p class='text'>Multiplayer</p>
            </button>
        </div>
        <div id="share" class="card noDisplay">
            <button id = "backBtn" onclick = "switchState('sessions')" class = "button square"><img src="public/img/back.png"></button>
            <div style='display: flex; flex-direction: row; justify-content: center;'>
                <p class='text' style='transform: scale(1.3); font-weight: 300; margin-right: 0; margin-left: 0'>Share
                    game
                    link:</p>
                <label style='margin: 15px 0 5px 0;'>
                    <button id="copyBtn" onclick="copy()" aria-label="copied!" data-balloon-pos="up"><img id="copyImg"
                            src="public/img/copy.png" width="28" height="28" style='transform: translate(5%, 2.5%)'></button>
                </label>
            </div>
            <input contenteditable="true" readonly='true' style='margin: 15px 0 30px 0' id="link">
            <button class="button" id="play">
                <p class='text'>Play</p>
            </button>
        </div>
        <div id="sessions" class="card noDisplay">
            <button id = "backBtn" onclick = "switchState('title')" class = "button square"><img src="public/img/back.png"></button>
            <p class='text' style='transform: scale(1.2); margin: 1em auto; font-weight: 300'>Select from
                created game sessions</p>
            <div id='sessions-buttons' style='margin: 0 0 40px 0'>

            </div>
        </div>
    </div>

</body>
<script>
    select('#center').style.height = window.innerHeight + 'px';
    const title = select('#title');
    const share = select('#share');
    const sessions = select('#sessions');
    const link = select('#link');
    const playButton = select('#play');

    const states = [title, share, sessions]
    let game;

    function switchState(state){
        switch(state){
            case 'title':
                states.map(x => x.classList.add('noDisplay'));
                title.classList.remove('noDisplay');
                break;
            case 'share':
                states.map(x => x.classList.add('noDisplay'));
                share.classList.remove('noDisplay');
                break;
            case 'sessions':
                states.map(x => x.classList.add('noDisplay'));
                appendSessionButtons(sessionGamesID);
                sessions.classList.remove('noDisplay');
                break;
            default:
                break;
        }
    }

    let sessionGamesID = <%- JSON.stringify(gamesID) %>

    function isOS() {
        return navigator.userAgent.match(/ipad|iphone/i);
    }

    //Clipboard.js https://gist.github.com/rproenca/64781c6a1329b48a455b645d361a9aa3
    window.Clipboard = (function (window, document, navigator) {
        var textArea,
            copy;

        function createTextArea(text) {
            textArea = document.createElement('textArea');
            textArea.value = text;
            document.body.appendChild(textArea);
        }

        function selectText() {
            var range,
                selection;

            if (isOS()) {
                range = document.createRange();
                range.selectNodeContents(textArea);
                selection = window.getSelection();
                selection.removeAllRanges();
                selection.addRange(range);
                textArea.setSelectionRange(0, 999999);
            } else {
                textArea.select();
            }
        }

        function copyToClipboard() {
            document.execCommand('copy');
            document.body.removeChild(textArea);
        }

        copy = function (text) {
            createTextArea(text);
            selectText();
            copyToClipboard();
        };

        return {
            copy: copy
        };
    })(window, document, navigator);


    function copy() {
        Clipboard.copy(link.getAttribute('value'));
        copyBtn.setAttribute('data-balloon-visible', '');
        setTimeout(() => { copyBtn.removeAttribute('data-balloon-visible') }, 2000);
    };

    function shareGame(g) {
        switchState('share');
        link.setAttribute('value', 'https://war-vessels.herokuapp.com/play/' + g);
        playButton.onclick = function(){play(g)};
        if (!isOS())
            copy();

    }

    function appendSessionButtons(gamesID){
        const buttons = [];
        let i = 1;
        for (const g of gamesID) {
            buttons.push("<button onclick=\"shareGame('" + g + "')\" class='square button'><p class = 'text'>" + i + "</p></button>");
            i++;
        }
        for(let j = i-1; j < 3; j++){
            buttons.push("<button onclick=\"createNewGame()\" class='square button create'><p class = 'text'>+</p></button>");
        }
        select('#sessions').classList.remove('noDisplay');
        select('#sessions-buttons').innerHTML = buttons.join('');
    }

    function init() {
        if(sessionGamesID.length == 0){
            createNewGame();
        }else{
            switchState('sessions');
            appendSessionButtons(sessionGamesID);
        }
    }   

    function createNewGame(){
        if(sessionGamesID.length < 4){
            const xhr = new XMLHttpRequest();
            xhr.open('POST', '/init', true);
            xhr.onreadystatechange = function () {
                if (xhr.readyState == XMLHttpRequest.DONE) {
                    const json = JSON.parse(xhr.responseText);
                    sessionGamesID = json.gamesID;
                    shareGame(sessionGamesID[sessionGamesID.length-1]);
                }
            }
            xhr.send();
        }
    }


    function play(g) {
        window.location.href = '../play/' + g;
    }
</script>

</html>